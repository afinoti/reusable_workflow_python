name: "Publish Lambda Function"

on:
  workflow_call:
    inputs:
      environment:
        description: "Environment"
        required: false
        default: "dev"
        type: string
      function_name:
        description: "Lambda Function Name"
        required: false
        default: "lambda_name"
        type: string
    outputs:
      version-number:
        description: "Version Number"
        value: ${{ jobs.publish.outputs.version-number }}
    secrets:
      AWS_ACCESS_KEY_ID:
        description: "AWS Access Key ID"
        required: true
      AWS_SECRET_ACCESS_KEY:
        description: "AWS Secret Access Key"
        required: true

jobs:
  debug:
    if: ( ${{ secrets.ACTIONS_RUNNER_DEBUG || vars.ACTIONS_RUNNER_DEBUG || secrets.ACTIONS_STEP_DEBUG || vars.ACTIONS_STEP_DEBUG || false }} == 'true' )
    name: Debug
    runs-on: ubuntu-latest
    steps:
      - name: Parse inputs
        run: echo "${{ toJSON(inputs) }}"
      - name: Parse env
        run: echo "${{ toJSON(env) }}"
      - name: Parse context 
        run: echo "${{ toJSON(github) }}"     

  publish:
    name: Publish
    runs-on: ubuntu-latest
    outputs:
      version-number: ${{ steps.publish.outputs.version-number }}
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: python-app        
        path: ./

    - name: Debug
      run: ls -la

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Publish Version
      id: publish
      run: |
        aws lambda update-function-code --publish --function-name=${{inputs.function_name}} --zip-file=fileb://python_app.zip > update_function_response.json
        echo "version-number=$(cat update_function_response.json | jq -r '.Version')" >> $GITHUB_OUTPUT


    # - name: Deploy to Lambda
    #   run: |
    #     echo ${{env.version-number}} 
    #     ( aws lambda get-alias \
    #       --function-name ${{inputs.function_name}} \
    #       --name ${{inputs.environment}} && 
    #       aws lambda update-alias \
    #       --function-name ${{inputs.function_name}} \
    #       --name ${{inputs.environment}} \
    #       --function-version ${{env.version-number}} )|| 
    #       aws lambda create-alias \
    #         --function-name ${{inputs.function_name}} \
    #         --name ${{inputs.environment}} \
    #         --function-version ${{env.version-number}} 